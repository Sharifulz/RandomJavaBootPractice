server.port= 9099

spring.jpa.show-sql=true
spring.jpa.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto = update
#PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost/kyc_test
spring.datasource.username=postgres
spring.datasource.password=123456
spring.datasource.driverClassName=org.postgresql.Driver

application.name=APIFeatureTemplate
application.owner=Shariful Islam
application.desc= This ${application.name} is owned by ${application.owner}

spring.mail.host=smtp.gmail.com
spring.mail.username=shaarifulz.ctrends@gmail.com
spring.mail.password=L1020305L577216

spring.mail.properties.mail.smtp.auth= true
spring.mail.properties.mail.smtp.socketFacory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false
spring.mail.properties.mail.smtp.ssl.enable= true

# -------------- FILE UPLOAD
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=resources/assets/images
image.upload.path =resources/assets/images/uploads